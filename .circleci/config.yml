version: 2.1

executors:
  python-docker:
    parameters:
      tag:
        type: string
        default: "3.5.5"
    docker:
      - image: circleci/python:<< parameters.tag >>
    working_directory: ~/project
    environment:
      TZ: "Asia/Jerusalem"

commands:
  pre-commands:
    description: pre commands
    steps:
      - run: sudo pip install --upgrade pip

  install-module:
    description: install aioswitcher module
    steps:
      - run: pip install --user .

  install-requirements:
    description: install requirements.txt
    steps:
      - run: pip install --user -r requirements.txt

  install-test-requirements:
    description: install requirements_test.txt
    steps:
      - run: pip install --user -r requirements_test.txt

  check-manifest:
    description: install check manifest
    steps:
      - run: sudo pip install check-manifest
      - run: check-manifest -v

  run-tests:
    description: run pytest unit testing
    steps:
      - run: python -m pytest -vsx

  run-tests-with-coverage-report:
    description: run pytest unit testing
    steps:
      - run: python -m pytest -vs --cov --cov-append --cov-config=.coveragerc
      - run: coveralls
      - run: codecov

  run-linters:
    description: run flake8, pydocstyle and pydocstyle linters
    steps:
      - run: python -m flake8 --statistics --count --doctests src/ tests/
      - run: python -m pydocstyle -v --count src/ tests/
      - run: python -m pycodestyle -v --statistics --show-pep8 --count src/ tests/

  run-pylint:
    description: run pylint
    steps:
      - run: python -m pylint --disable fixme --rcfile pylintrc src/ tests/

  run-mypy:
    description: run mypy type checking
    steps:
      - run: python -m mypy --config-file mypy.ini src/ tests/

jobs:
  python35-manifest:
    executor:
      name: python-docker
    steps:
      - checkout
      - pre-commands
      - check-manifest

  python35-linters:
    executor:
      name: python-docker
    steps:
      - checkout
      - pre-commands
      - install-test-requirements
      - run-linters

  python35-pylint:
    executor:
      name: python-docker
    steps:
      - checkout
      - pre-commands
      - install-test-requirements
      - run-pylint

  python35-mypy:
    executor:
      name: python-docker
    steps:
      - checkout
      - pre-commands
      - install-test-requirements
      - run-mypy

  python36-unittests:
    executor:
      name: python-docker
      tag: "3.6"
    steps:
      - checkout
      - pre-commands
      - install-module
      - install-requirements
      - install-test-requirements
      - run-tests

  python37-unittests:
    executor:
      name: python-docker
      tag: "3.7.1"
    steps:
      - checkout
      - pre-commands
      - install-module
      - install-requirements
      - install-test-requirements
      - run-tests

  python35-unittests-coverage-reports:
    executor:
      name: python-docker
    steps:
      - checkout
      - pre-commands
      - install-module
      - install-requirements
      - install-test-requirements
      - run-tests-with-coverage-report

workflows:
  version: "2.1"
  build:
    jobs:
      - python35-manifest

      - python35-linters:
          requires:
            - python35-manifest

      - python35-pylint:
          requires:
            - python35-manifest

      - python35-mypy:
          requires:
            - python35-manifest

      - python36-unittests:
          requires:
            - python35-linters
            - python35-pylint
            - python35-mypy

      - python37-unittests:
          requires:
            - python35-linters
            - python35-pylint
            - python35-mypy

      - python35-unittests-coverage-reports:
          requires:
            - python36-unittests
            - python37-unittests
