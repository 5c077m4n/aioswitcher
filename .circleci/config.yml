version: 2.1

executors:
  python-docker:
    parameters:
      tag:
        type: string
        default: "3.5.5"
    docker:
      - image: circleci/python:<< parameters.tag >>
    working_directory: ~/project

commands:
  pre-command:
    description: pre commands
    steps:
      - run: sudo pip install --upgrade pip
      - run: sudo timedatectl set-timezone Asia/Jerusalem

  install-module:
    description: install aioswitcher module
    steps:
      - run: pip install --user .

  install-requirements:
    description: install requirements.txt
    steps:
      - run: pip install --user -r requirements.txt

  install-test-requirements:
    description: install requirements_test.txt
    steps:
      - run: pip install --user -r requirements_test.txt

  install-check-manifest:
    description: install check manifest
    steps:
      - run: pip install --user -r check-menifest
      - run: check-manifest -v

  run-tests:
    description: run pytest unit testing
    steps:
      - run: python -m pytest -vsx

  run-tests-with-coverage-report:
    description: run pytest unit testing
    steps:
      - run: python -m pytest -vs --cov --cov-append --cov-config=.coveragerc

  run-linters:
    description: run flake8, pydocstyle and pydocstyle linters
    steps:
      - run: python -m flake8 --statistics --count --doctests src/ tests/
      - run: python -m pydocstyle -v --count src/ tests/
      - run: python -m pycodestyle -v --statistics --show-pep8 --count src/ tests/

  run-pylint:
    description: run pylint
    steps:
      - run: python -m pylint --disable fixme --rcfile pylintrc src/ tests/

  run-mypy:
    description: run mypy type checking
    steps:
      - run: python -m mypy --config-file mypy.ini src/ tests/

jobs:
  python35-unittests:
    executor:
      name: python-docker
    steps:
      - checkout
      - pre-command
      - install-module
      - install-requirements
      - install-test-requirements
      - run-tests

workflows:
  version: "2.1"
  build:
    jobs:
      - python35-unittests
