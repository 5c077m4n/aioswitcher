[build-system]
requires = ["poetry~=0.12"]
build-backend = "poetry.masonry.api"

[tool.poetry]
name = "aioswitcher"
version = "2019.8.28"
description = "Switcher Boiler Unofficial Bridge and API."
license = "MIT"
authors = ["Tomer Figenblat <tomer.figenblat@gmail.com>"]
readme = "README.md"
homepage = "https://pypi.org/project/aioswitcher/"
repository = "https://github.com/tomerfi/aioswitcher"
documentation = "https://aioswitcher.readthedocs.io"
keywords = ["home", "automation", "switcher", "water-heater"]
classifiers = [
    "Framework :: AsyncIO",
    "Framework :: tox",
    "Framework :: Pytest",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.5",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Topic :: Documentation :: Sphinx",
    "Topic :: Home Automation",
    "Topic :: Software Development :: Libraries",
    "Typing :: Typed"
]
include = [] # CAHNGELOG, LICENSE, README and pyproject.toml are automatically included
exclude = [
    ".*",
    "dist",
    "docs",
    "tests",
    "CODE_OF_CONDUCT.md",
    "mypy.ini",
    "pylintrc",
    "*__pycache__*",
    "*.pyc"
] # poetry.lock is automatically excluded

[tool.poetry.dependencies]
python = "^3.5 || ^3.6 || ^3.7"
asynctest = { version = "^0.13.0", optional = true }
bandit = { version = "^1.6.1", optional = true }
black = { version = "^19.3b0", optional = true , python = ">=3.6"}
codacy-coverage = { version = "^1.3.11", optional = true }
codecov = { version = "^2.0.15", optional = true }
doc8 = { version = "^0.8.0", optional = true }
flake8 = { version = "^3.7.8", optional = true }
flake8-docstrings = { version = "^1.4.0", optional = true }
isort = { version = "^4.3.21", optional = true }
mypy = { version = "^0.720", optional = true }
nodeenv = { version = "^1.3.3", optional = true }
pygments = { version = "^2.4.2", optional = true }
pytest = { version = "^5.1.1", optional = true }
pytest-aiohttp = { version = "^0.3.0", optional = true }
pytest-asyncio = { version = "^0.10.0", optional = true }
pytest-cov = { version = "^2.7.1", optional = true }
pytest-sugar = { version = "^0.9.2", optional = true }
scspell3k = { version = "^2.2", optional = true }
sphinx = { version = "^2.2.0", optional = true }
sphinx-rtd-theme = { version = "^0.4.3", optional = true }
toml = { version = "^0.10.0", optional = true }
yamllint = { version = "^1.17.0", optional = true }

[tool.poetry.extras]
coverage = ["codacy-coverage", "codecov"]
docslint = ["doc8", "scspell3k"]
docsbuild = ["pygments", "sphinx", "sphinx-rtd-theme", "toml"]
nodeenv = ["nodeenv"]
python-checkers = [
    "asynctest",
    "bandit",
    "black",
    "flake8",
    "flake8-docstrings",
    "isort",
    "mypy",
    "pytest",
    "toml",
    "yamllint"
]
unittests = [
    "asynctest",
    "pytest",
    "pytest-aiohttp",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-sugar"
]
toml = ["toml"]

[tool.isort]
line_length = 79

[tool.black]
line-length = 79
target-version = ["py37"]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist =
    npm-checkers
    pypi-checkers
    py{35, 36, 37}
isolated_build = true
minversion = 3.13.1
requires = poetry>=0.12.17
skip_missing_interpreters = true
skipdist = true

[testenv]
basepython = python3.7
skip_install = true
whitelist_externals =
    bash
    poetry

[testenv:npm-checkers]
commands =
    python --version
    poetry install -v --extras "nodeenv"
    nodeenv --python-virtualenv
    npm install
    npm run validate-pkg
    npm run lint-md
    npm run spell-md-report

[testenv:pypi-checkers]
commands =
    python --version
    poetry install -v --extras "python-checkers" --extras "docslint" --extras "docsbuild"
    yamllint --config-file .yamllint --format colored --strict .
    bandit -rvc .bandit src/ tests/ docs/source/ pyscripts/ -l -ii
    isort --check-only --recursive src/ tests/ docs/source/ pyscripts/
    flake8 --statistics --count --doctests src/ tests/ docs/source/ pyscripts/
    black --diff src/ tests/ docs/source/ pyscripts/
    mypy --follow-imports silent --ignore-missing-imports src/ tests/ docs/source/ pyscripts/
    doc8 --allow-long-titles --max-line-length 100 -e rst docs/source
    # bash -c "for fil in $(find "$(pwd)/docs/source" -type f -name "*.rst"); do scspell --report-only --use-builtin-base-dict --override-dictionary .spelling $fil || exit 1; done" # linux
    # scspell --report-only --use-builtin-base-dict --override-dictionary .spelling $(dir "${pwd}/docs/source/*.rst" -Recurse | foreach  { "$_" }) # windows
    sphinx-build -W -b html -d {envtmpdir}/doctrees docs/source {envtmpdir}/html

[testenv:py35]
basepython = python3.5
commands =
    python --version
    poetry install -v --extras "unittests"
    pytest -vs

[testenv:py36]
basepython = python3.6
commands =
    python --version
    poetry install -v --extras "unittests"
    pytest -vs

[testenv:py37]
commands =
    python --version
    poetry install -v --extras "unittests" --extras "toml"
    pytest -vs --cov --cov-config=.coveragerc
    python {toxinidir}/pyscripts/poetry-to-requirements.py

"""
